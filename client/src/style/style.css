@font-face {
    font-family: 'MontSerrat';
    src: url('./fonts/Montserrat-VariableFont_wght.ttf');
}


html {
    background-color: var(--color-header);
}

body {
    background-color: var(--color-header);
    background: var(--background-main);
    background-size: cover;
    display: grid;
    flex-direction: column;
    font-family: 'MontSerrat';
    grid-template-rows: var(--size-header-height) calc(100vh - var(--size-header-height));
    height: 100vh;
    margin: 0;
    padding: 0;
    user-select: none;
    width: 100vw;
}

/* DEFAULT TAGS STYLE */
a, input, button, textarea {
    all: unset;
}

/* DROPDOWNS */
.dropdown {
    position: relative;
}

.dropdown .options-container {
    display: none;
    position: absolute;
    z-index: 1;
}

.dropdown:hover .options-container {
    background-color: var(--card-color);
    border: var(--size-border) solid var(--color-border-placeholder);
    border-radius: var(--border-radius);
    color: white;
    display: flex;
    flex-direction: column;
    right: -0.2rem;
    top: calc(100% + 0.2rem);
    width: 20rem;
    z-index: 1;
}

.dropdown:hover .option {
    opacity: 0.5;
    padding: 0.5rem 1rem;
}

.dropdown:hover .option:hover {
    opacity: 1;
}

.dropdown:hover .option:active {
    background-color: var(--color-card-active);
}


::-webkit-scrollbar {
    width: 0;
}

.spacer {
    flex-grow: 1;
}

#top-header {
    align-items: center;
    background-color: var(--color-header);
    color: var(--color-header-contrast);
    display: flex;
    gap: 1rem;
    padding: 0 2rem;
}

#top-header #project-breadcrumb {
    display: flex;
    flex-direction: row;
    align-items: center;
}

#top-header #limbo-logo {
    color: var(--color-logo);
    font-family: var(--font-logo);
    font-size: 1.3rem;
    font-weight: bold;
    letter-spacing: -0.1rem;

    /* Compensation for odd font spacing */
    margin: 0.3rem 0.2rem 0 0;
}

#top-header #project-name {
    font-size: 1.5rem;
    font-weight: bold;
    text-overflow: ellipsis;
}

#top-header .icon {
    filter: var(--filter-header-contrast);
    background-position: center;
    background-repeat: no-repeat;
    background-size: cover;
    height: 1.5rem;
    width: 1.5rem;
}

#top-header #theme-selector.dropdown {
    background-image: url(./icons/color-palette.svg);
}

#top-header .inactive {
    opacity: 0.5;
}

#top-header .clickable {
    opacity: 0.5;
    cursor: pointer;
}

#top-header .clickable:hover, #top-header .clickable:focus {
    opacity: 1;
}

#top-header #save-status[data-status=loading] {
    animation: spin;
    animation-duration: 200ms;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
    background-image: url(icons/loader.svg);
}

#top-header #save-status[data-status=connected] {
    background-image: url(icons/cloud.svg);
    opacity: 0.5;
}

#top-header #save-status[data-status=success] {
    background-image: url(icons/cloud-done.svg);
    filter: var(--filter-success);
}

#top-header #save-status[data-status=disconnected] {
    animation: blink 1s steps(2, start) infinite;
    background-image: url(icons/cloud-off.svg);
    filter: var(--filter-error);
}

@keyframes blink {
    to {
        visibility: hidden;
    }
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

#main_container {
    display: flex;
    flex-direction: row;
    gap: 2rem;
    justify-content: center;
    overflow: hidden;
    padding: 2rem 5rem;
}

#task_editor {
    align-items: center;
    background-color: var(--color-modal-backdrop);
    display: flex;
    height: 100%;
    justify-content: center;
    position: absolute;
    width: 100%;
}

#task_editor #task_editor_card {
    background-color: var(--color-card);
    border-radius: var(--border-radius);
    color: var(--color-card-contrast);
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
    height: 70%;
    padding: 1rem;
    width: 70%;
}

#task_editor #task_editor_card input,
#task_editor #task_editor_card textarea {
    background-color: var(--color-input);
    border-radius: var(--border-radius);
    padding: 0.5rem;
}

#task_editor #task_editor_card #notes {
    flex-grow: 1;
}

#task_editor #task_editor_card button {
    align-self: end;
}

.bucket {
    background: var(--color-bucket);
    border-color: var(--color-border-bucket);
    border-radius: var(--border-radius);
    border-style: solid;
    border-width: var(--size-border-bucket);
    color: var(--color-bucket-contrast);
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding: 1rem;
    position: relative;
    width: 30%;
}

.bucket>.title {
    display: flex;
    font-family: var(--font-bucket-title);
    font-size: 1.5rem;
    font-weight: bold;
    text-transform: capitalize;
}

.bucket button.create-task {
    cursor: pointer;
    display: flex;
    font-style: italic;
    opacity: 0.5;
    padding: 0.2rem 0.6rem 1rem 0.6rem;
}

.bucket button.create-task:hover,
.bucket button.create-task:focus {
    opacity: 1;
}

.task_container {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding-bottom: 3rem;
    overflow-y: auto;
    overflow-x: hidden;
}

.task_container:focus-visible {
    outline: var(--size-border) solid var(--color-bucket-contrast);
    border-radius: var(--border-radius);
}


.task_wrapper {
    padding: 0.4rem 0;
}

.task_wrapper:first-child {
    padding-top: 0.2rem;
}

.task_wrapper.dragged {
    padding: 0;
}

.task_wrapper.dragged .task {
    border-width: 0;
    height: 0;
    padding: 0;
    visibility: hidden;
}

.task {
    background-color: var(--color-card);
    color: var(--color-card-contrast);
    border-radius: var(--border-radius);
    cursor: pointer;
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
    overflow: hidden;
    padding: 1rem;
}

.task>.header {
    display: grid;
    grid-template-columns: auto 1.5rem;
}

.task>.header>.more.icon {
    background: url(icons/more.svg);
    background-position: center;
    background-size: cover;
    border-radius: 50%;
    display: flex;
    height: 1rem;
    filter: opacity(0.5);
    visibility: hidden;
    width: 1.5rem;
}

.task:hover>.header>.icon {
    visibility: visible;
    filter: opacity(0.5);
}

.task>.header>.icon:hover {
    filter: var(--filter-card-contrast);
}

.task>.header .dropdown:hover .options-container {
    background-color: red;
    left: auto;
    right: 0;
    top: 1rem;
    width: 10rem;
}

.task span {
    overflow: hidden;
    text-overflow: ellipsis;
}

.task>.description {
    opacity: 0.5;
}

.task>.labels_container {
    display: flex;
    flex-wrap: wrap;
}

.task>.labels_container>.label_tag {
    border-radius: var(--border-radius);
    border-width: var(--size-border);
    border-style: solid;
    font-size: 0.7rem;
    font-size: 0.8rem;
    gap: 0.2rem;
    padding: 0.3rem 0.4rem;
}


.task .icons_container {
    display: flex;
    flex-direction: row;
    gap: 0.2rem;
}

.task .icons_container .notes.icon {
    background: url(icons/notes.svg);
    background-position: center;
    background-size: cover;
    display: flex;
    height: 1.5rem;
    width: 1.5rem;
    filter: opacity(0.5);
}


.task:hover {
    background-color: var(--color-card-hover);
}

.task:active {
    background-color: var(--color-card-active);
}

#task_placeholder {
    background-color: transparent;
    border: var(--size-border) dashed var(--color-card-active);
    margin: 0.1rem;
}

.bucket .footer {
    background: linear-gradient(transparent, var(--color-bucket));
    border-radius: var(--border-radius);
    bottom: 0;
    height: 3rem;
    left: 0;
    pointer-events: none;
    position: absolute;
    width: 100%;
}